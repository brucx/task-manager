version: '3.8'

services:
  # Redis broker and result backend
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - task_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # FastAPI application
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SHARED_TMP_PATH=/tmp/shared/tasks
    volumes:
      - shared_storage:/tmp/shared
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - task_network
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

  # IO Workers
  io-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SHARED_TMP_PATH=/tmp/shared/tasks
    volumes:
      - shared_storage:/tmp/shared
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - task_network
    command: celery -A src.core.celery_app worker -Q io -c 20 -n io-worker@%h
    deploy:
      replicas: 1

  # CPU Workers (Classification)
  cpu-classify-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SHARED_TMP_PATH=/tmp/shared/tasks
    volumes:
      - shared_storage:/tmp/shared
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - task_network
    command: celery -A src.core.celery_app worker -Q cpu -c 10 -n cpu-classify@%h
    deploy:
      replicas: 1

  # CPU Workers (Encoding)
  cpu-encode-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SHARED_TMP_PATH=/tmp/shared/tasks
    volumes:
      - shared_storage:/tmp/shared
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - task_network
    command: celery -A src.core.celery_app worker -Q cpu -c 10 -n cpu-encode@%h
    deploy:
      replicas: 1

  # Flower (Celery monitoring UI)
  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    ports:
      - "5555:5555"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - task_network
    command: celery -A src.core.celery_app flower --port=5555

volumes:
  redis_data:
  shared_storage:

networks:
  task_network:
    driver: bridge